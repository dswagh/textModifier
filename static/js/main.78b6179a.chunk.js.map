{"version":3,"sources":["components/NavBar.js","components/TextUtils.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","react_default","a","createElement","className","concat","mode","style","color","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","aria-checked","onClick","toggleMode","htmlFor","TextUtils","_useState","useState","_useState2","Object","slicedToArray","varError","setvarError","_useState3","_useState4","vartext","setText","funEmptyStringCheck","length","alert","Fragment","mb-3","placeholder","onChange","event","target","value","rows","k","toUpperCase","toLowerCase","split","newtext","itr","charAt","slice","textSel","document","getElementById","select","navigator","clipboard","writeText","newTextVar","join","Alert","alertText","msg","App","setmode","setalert","components_NavBar","body","background","components_Alert","components_TextUtils","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.78b6179a.chunk.js","sourcesContent":["import React from \"react\";\r\n//import { Link } from \"react-router-dom\";\r\n\r\nfunction NavBar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\" style={{ color: \"white\" }}>\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            Navbar\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"/navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {\r\n                // <li className=\"nav-item\">\r\n                //   <Link className=\"nav-link\" to=\"/about\">\r\n                //     About\r\n                //   </Link>\r\n                // </li>\r\n                /*\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  href=\"/\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </a>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"/\">\r\n                      Action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"/\">\r\n                      Another action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"/\">\r\n                      Something else here\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li> */\r\n              }\r\n\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\" href=\"/\">\r\n                  Disabled\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"dark\" ? \"light\" : \"dark\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                aria-checked\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Change to {props.mode === \"dark\" ? \"light\" : \"dark\"}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\n//import App from \"../App\";\r\n// import { App } from \"../App\";\r\n\r\nfunction TextUtils(props) {\r\n  const [varError, setvarError] = useState(\"\");\r\n  const [vartext, setText] = useState(\"\");\r\n  const changeHandler = (event) => {\r\n    setvarError(\"\");\r\n    setText(event.target.value);\r\n  };\r\n  //Text conversion to uppercase\r\n  const handleUpcase = () => {\r\n    funEmptyStringCheck();\r\n    let k = vartext.toUpperCase();\r\n\r\n    setText(k);\r\n  };\r\n  //Conversion to lower case\r\n  const handleLowcase = () => {\r\n    funEmptyStringCheck();\r\n    let k = vartext.toLowerCase();\r\n    setText(k);\r\n  };\r\n  //clear the text\r\n  const handlerClear = () => {\r\n    setText(\"\");\r\n    props.alert(\"text has beeen cleared\", \"success\");\r\n  };\r\n  // copy text to clipboard\r\n  const handlerCopy = () => {\r\n    funEmptyStringCheck();\r\n    var textSel = document.getElementById(\"txtArea\");\r\n    textSel.select();\r\n    navigator.clipboard.writeText(textSel.value);\r\n  };\r\n\r\n  // All First word Upper case\r\n  const handleFirstUpcase = () => {\r\n    funEmptyStringCheck();\r\n    let k = vartext.split(\" \");\r\n    let newtext = \"\";\r\n    for (let itr in k) {\r\n      newtext =\r\n        newtext + k[itr].charAt(0).toUpperCase() + k[itr].slice(1) + \" \";\r\n    }\r\n    setText(newtext);\r\n  };\r\n\r\n  // remove extra spaces\r\n\r\n  const handlerRemoveExtraSpaces = () => {\r\n    funEmptyStringCheck();\r\n    let newTextVar = vartext.split(/[ ]+/);\r\n    setText(newTextVar.join(\" \"));\r\n  };\r\n\r\n  // function empty string check\r\n\r\n  const funEmptyStringCheck = () => {\r\n    if (vartext.length === 0) {\r\n      setvarError(\"String is empty, please add the text in box\");\r\n      alert(\"String is empty, please add the text in box\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <p style={{ color: \"red\" }}> {varError}</p>\r\n      <div className=\"container\">\r\n        <div mb-3>\r\n          <textarea\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the text here \"\r\n            onChange={changeHandler}\r\n            value={vartext}\r\n            rows=\"8\"\r\n            id=\"txtArea\"\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary m-1\"\r\n          type=\"button\"\r\n          onClick={handleUpcase}\r\n        >\r\n          Upper case\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-primary m-1\"\r\n          type=\"button\"\r\n          onClick={handleLowcase}\r\n        >\r\n          Lower case\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-primary m-1\"\r\n          type=\"button\"\r\n          onClick={handleFirstUpcase}\r\n        >\r\n          Cap 1st letter\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-primary m-1\"\r\n          type=\"button\"\r\n          onClick={handlerCopy}\r\n        >\r\n          Copytext\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary m-1\"\r\n          type=\"button\"\r\n          onClick={handlerRemoveExtraSpaces}\r\n        >\r\n          Remove Extra spaces\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-danger m-1\"\r\n          type=\"button\"\r\n          onClick={handlerClear}\r\n        >\r\n          Clear text\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your text summary</h2>\r\n        Total Words are {vartext.split(\" \").length - 1} and characters are{\" \"}\r\n        {vartext.length}\r\n        <p>Seconds to read {0.42 * (vartext.split(\" \").length - 1)}</p>\r\n        <h3>Preview </h3>\r\n        {vartext.length > 0\r\n          ? vartext\r\n          : \"Please enter the text in box to review here!!\"}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TextUtils;\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alertText && (\r\n      <div\r\n        className={`alert alert-${props.alertText.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{props.alertText.type}</strong> {props.alertText.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport NavBar from \"./components/NavBar\";\nimport TextUtils from \"./components/TextUtils\";\n//import About from \"./components/About\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n//import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"lg\");\n\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({ msg: message, type: type });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n  const handlerToggleMode = () => {\n    if (mode === \"dark\") {\n      setmode(\"light\");\n      document.body.style.background = \"white\";\n    } else {\n      setmode(\"dark\");\n      document.body.style.background = \"#34616e\";\n    }\n  };\n\n  return (\n    // <Router>\n    <>\n      <NavBar mode={mode} toggleMode={handlerToggleMode} />\n      <Alert alertText={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes>\n          <Route exact path=\"/about\" element={<About />}></Route> */}\n\n        {/* <Route\n            exact\n            path=\"/\"\n            element={<TextUtils mode={mode} alert={showAlert} />} */}\n\n        <TextUtils mode={mode} alert={showAlert} />\n        {/* //  </Route>\n        // </Routes> */}\n      </div>\n    </>\n    // </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}